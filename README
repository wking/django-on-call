If there's somthing strange in your Django_ app, who you gonna call?
The django-on-call app helps your users figure that out, pointing them
to one of your on-call sysadmins.  The admins can work out an on-call
schedule among themselves, by posting a Python statement to the
database (we're all consenting adults), and the view page will direct
users to the appropriate on-call individual.

Quick-start
===========

If you don't have a Django project and you just want to run
django-on-call as a stand-alone service, you can use the example
project.  Initialize the database with::

  $ python example/manage.py syncdb

See the `Django documentation`_ for more details.

Run
===

Run the app on your local host with::

  $ python example/manage.py runserver

You may need to add the current directory to ``PYTHONPATH`` so
``python`` can find the ``django_on_call`` package.  If you're running
`POSIX shell`_, that's::

  $ PYTHONPATH=".:$PYTHONPATH" python example/manage.py runserver

.. _Django: https://www.djangoproject.com/
.. _Django documentation: https://docs.djangoproject.com/
.. _POSIX shell: http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_10
